#define VERSION 0x08          // software version (LSB 0..release, 1..devel)

#define SS 10                 // PB2
#define MOSI 11               // PB3
#define MISO 12               // PB4
#define SCK 13                // PB5

boolean got_esc = false;      // got escape character over spi
boolean do_spi_next = false;  // next character to send is in spi_next
byte spi_next;                // next character to send over spi


void setup()
{
  byte clr;
  
  Serial.begin(57600);
  
  // setup SPI interface
  pinMode(SS, INPUT);
  pinMode(MOSI, INPUT);
  pinMode(MISO, OUTPUT);
  pinMode(SCK, INPUT);
  
  // enable SPI interface, CPOL=1, CHPA=1
  SPCR = (1<<6)|(1<<3)|(1<<2);
  // dummy read
  clr = SPSR;
  clr = SPDR;
}


void do_irq()
{
  // raise a Card Line hardware interrupt (PB6)
  DDRB |= (1 << 6);
  PORTB &= ~(1 << 6);    // low
  PORTB |= (1 << 6);     // high
  PORTB &= ~(1 << 6);    // low  
}


byte spi_transfer(volatile byte out)
{
  // send and receive a character, blocking
  SPDR = out;
  while (!(SPSR & (1<<7)));
  return SPDR;
}


void cmd_set_bps()
{
  // TODO: test
  byte spi_in;

  // read bps index
  spi_in = spi_transfer(0x00);
  if (spi_in == 0) {
    Serial.begin(300);
  } else if (spi_in == 1) {
    Serial.begin(1200);
  } else if (spi_in == 2) {
    Serial.begin(2400);
  } else if (spi_in == 3) {
    Serial.begin(4800);
  } else if (spi_in == 4) {
    Serial.begin(9600);
  } else if (spi_in == 5) {
    Serial.begin(14400);
  } else if (spi_in == 6) {
    Serial.begin(19200);
  } else if (spi_in == 7) {
    Serial.begin(28800);
  } else if (spi_in == 8) {
    Serial.begin(38400);
  } else if (spi_in == 9) {
    Serial.begin(57600);
  } else if (spi_in == 10) {
    Serial.begin(115200);
  }
}


void loop()
{
  byte serial_in;
  byte spi_in;
  
  if (do_spi_next) {
    serial_in = spi_next;
    do_spi_next = false;
  } else if (Serial.available() > 0) {
    serial_in = Serial.read();
    // escape null-bytes and blackslashes and 0xff
    if (serial_in == 0x00) {
      serial_in = '\\';
      spi_next = 0x00;
      do_spi_next = true;
    } else if (serial_in == '\\') {
      spi_next = '\\';
      do_spi_next = true;
    } else if (serial_in == 0xff) {
      serial_in = '\\';
      spi_next = 0xff;
      do_spi_next = true;
    }
  } else {
    // send dummy byte
    serial_in = 0x00;
  }
  
  // do spi
  spi_in = spi_transfer(serial_in);
  
  if (got_esc) {
    got_esc = false;
    // handle escape characters
    if (spi_in == 'b') {
      // \b: set bps
      cmd_set_bps();
    } else {
      Serial.print(spi_in, BYTE);
    }
  } else if (spi_in == '\\') {
    got_esc = true;
  } else if (spi_in != 0x00) {
    Serial.print(spi_in, BYTE);
  }
}
